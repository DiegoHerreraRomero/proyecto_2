{"version":3,"sources":["serviceWorker.js","contexts/User/index.js","components/Episodes/Table/Row/index.js","components/Loading/index.js","components/Episodes/Table/index.js","components/Characters/Table/Row/index.js","components/Characters/Image/index.js","components/Characters/Table/index.js","components/Users/MatchPeople/index.js","components/Users/MyAccount/index.js","components/Users/Login/index.js","components/Users/Register/index.js","components/Template/PrivateRoute/index.js","components/Template/PublicRoute/index.js","components/Template/index.js","index.js"],"names":["Boolean","window","location","hostname","match","login","user","type","payload","logout","register","updateUser","addFavoriteEpisode","episode","removeFavoriteEpisode","addFavoriteCharacter","character","removeFavoriteCharacter","setLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","err","console","log","reducer","action","userLogged","users","Object","objectSpread","listUsers","undefined","ids","map","u","id","newId","length","Math","max","apply","toConsumableArray","newUser","email","password","favoriteEpisodes","favoriteCharacters","concat","userMod","newFavEpisode","newNoFavEpisode","filter","fe","newFavCharacter","newNoFavCharacter","initialState","getItem","parse","getLocalStorage","UserContext","React","createContext","UserProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","children","EpisodesTableRow","_useContext","useContext","_props$episode","name","airDate","air_date","isFavorite","includes","title","onClick","AddFavoriteEpisodeDispatch","role","aria-label","className","RemoveFavoriteEpisodeDispatch","Loading","_ref","isLoading","Modal","show","size","aria-labelledby","centered","Body","Container","Row","Col","Spinner","animation","variant","sizing","URL","defaultTableData","episodes","prev","next","currentPage","EpisodesTable","_useState","useState","_useState2","tableData","setTableData","_useState3","_useState4","setIsLoading","loadEpisodes","url","sumPage","arguments","asyncToGenerator","regenerator_default","mark","_callee","response","_response$data","info","results","wrap","_context","axios","get","sent","data","stop","_x","_x2","this","getApi","useEffect","Table","striped","bordered","responsive","key","Pagination","Prev","Item","active","Next","CharactersTableRow","_props$character","status","species","gender","image","showImage","AddFavoriteCharacterDispatch","RemoveFavoriteCharacterDispatch","_props$imageModal","imageModal","Image","src","fluid","Footer","Button","hideImage","characters","defaultImageModal","CharactersTable","_useState5","_useState6","setImageModal","loadCharacters","Image_Loading","MacthPeople","matchedPeople","coincidencesEpisodes","ep","coincidencesCharacters","ch","matchScore","sort","b","join","defaultTempUser","currentPassword","passwordConfirm","MyAccount","tempUser","setTempUser","errors","setErrors","save","setSave","updateTempUser","e","defineProperty","target","Jumbotron","Alert","Form","onSubmit","preventDefault","newErrors","valid","UpdateUserDispatch","Group","controlId","Label","Control","placeholder","onChange","Text","UserLogin","global","LoginDispatch","RegisterDispatch","PrivateRoute","Component","component","rest","objectWithoutProperties","react_router","assign","render","to","PublicRoute","Homepage","Template","react_router_dom","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","exact","NavDropdown","alignRight","Divider","path","MatchPeople","LogoutDispatch","UserRegister","ReactDOM","components_Template","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38b8bcae.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useReducer } from 'react'\n\nconst LOGIN = 'LOGIN'\nconst LOGOUT = 'LOGOUT'\nconst REGISTER = 'REGISTER'\nconst UPDATE_USER = 'UPDATE_USER'\nconst ADD_FAVORITE_EPISODE = 'ADD_FAVORITE_EPISODE'\nconst REMOVE_FAVORITE_EPISODE = 'REMOVE_FAVORITE_EPISODE'\nconst ADD_FAVORITE_CHARACTER = 'ADD_FAVORITE_CHARACTER'\nconst REMOVE_FAVORITE_CHARACTER = 'REMOVE_FAVORITE_CHARACTER'\n\nexport const login = (user) => {\n  return {\n    type: LOGIN,\n    payload: {\n      user\n    }\n  }\n}\n\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n    payload: {}\n  }\n}\n\nexport const register = (user) => {\n  return {\n    type: REGISTER,\n    payload: {\n      user\n    }\n  }\n}\n\nexport const updateUser = (user) => {\n  return {\n    type: UPDATE_USER,\n    payload: {\n      user\n    }\n  }\n}\n\nexport const addFavoriteEpisode = episode => {\n  return {\n    type: ADD_FAVORITE_EPISODE,\n    payload: {\n      episode\n    }\n  }\n}\n\nexport const removeFavoriteEpisode = episode => {\n  return {\n    type: REMOVE_FAVORITE_EPISODE,\n    payload: {\n      episode\n    }\n  }\n}\n\nexport const addFavoriteCharacter = character => {\n  return {\n    type: ADD_FAVORITE_CHARACTER,\n    payload: {\n      character\n    }\n  }\n}\n\nexport const removeFavoriteCharacter = character => {\n  return {\n    type: REMOVE_FAVORITE_CHARACTER,\n    payload: {\n      character\n    }\n  }\n}\n\nconst setLocalStorage = state => {\n  try {\n    const serializedState = JSON.stringify(state)\n    window.localStorage.setItem('state', serializedState)\n    return state\n  } catch (err) {\n    console.log('Error on localstorage')\n    return state\n  }\n}\n\nconst getLocalStorage = () => {\n  try {\n    const serializedState = window.localStorage.getItem('state')\n    if (serializedState === null) {\n      return { userLogged: null, users: [] }\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return { userLogged: null, users: [] }\n  }\n}\n\nlet reducer = (state, action) => {\n  const { userLogged, users } = state\n  switch (action.type) {\n    case LOGIN:\n      return setLocalStorage({\n        ...state,\n        userLogged: action.payload.user\n      })\n    case LOGOUT:\n      return setLocalStorage({\n        ...state,\n        userLogged: null\n      })\n    case REGISTER:\n      let listUsers = []\n      if (users !== undefined) {\n        listUsers = users\n      }\n      const ids = listUsers.map(u => u.id)\n      let newId = 1\n      if (ids.length > 0) {\n        newId = Math.max(...ids) + 1\n      }\n      let { user: newUser } = action.payload\n      newUser = {\n        id: newId,\n        email: newUser.email,\n        password: newUser.password,\n        favoriteEpisodes: [],\n        favoriteCharacters: []\n      }\n      return setLocalStorage({\n        ...state,\n        users: [...listUsers, newUser],\n        userLogged: newUser\n      })\n    case UPDATE_USER:\n      return setLocalStorage({\n        ...state,\n        userLogged: {\n          ...userLogged,\n          password: action.payload.user.password\n        },\n        users: users.map(user => {\n          let userMod = user\n          if (user.id === userLogged.id) {\n            userMod = {\n              ...userMod,\n              password: action.payload.user.password\n            }\n          }\n          return userMod\n        })\n      })\n    case ADD_FAVORITE_EPISODE:\n      const newFavEpisode = [...userLogged.favoriteEpisodes, action.payload.episode]\n      return setLocalStorage({\n        ...state,\n        userLogged: {\n          ...userLogged,\n          favoriteEpisodes: newFavEpisode\n        },\n        users: users.map(user => {\n          let userMod = user\n          if (user.id === userLogged.id) {\n            userMod = {\n              ...userMod,\n              favoriteEpisodes: newFavEpisode\n            }\n          }\n          return userMod\n        })\n      })\n    case REMOVE_FAVORITE_EPISODE:\n      const newNoFavEpisode = userLogged.favoriteEpisodes.filter(fe => fe !== action.payload.episode)\n      return setLocalStorage({\n        ...state,\n        userLogged: {\n          ...userLogged,\n          favoriteEpisodes: newNoFavEpisode\n        },\n        users: users.map(user => {\n          let userMod = user\n          if (user.id === userLogged.id) {\n            userMod = {\n              ...userMod,\n              favoriteEpisodes: newNoFavEpisode\n            }\n          }\n          return userMod\n        })\n      })\n    case ADD_FAVORITE_CHARACTER:\n      const newFavCharacter = [...userLogged.favoriteCharacters, action.payload.character]\n      return setLocalStorage({\n        ...state,\n        userLogged: {\n          ...userLogged,\n          favoriteCharacters: newFavCharacter\n        },\n        users: users.map(user => {\n          let userMod = user\n          if (user.id === userLogged.id) {\n            userMod = {\n              ...userMod,\n              favoriteCharacters: newFavCharacter\n            }\n          }\n          return userMod\n        })\n      })\n    case REMOVE_FAVORITE_CHARACTER:\n      const newNoFavCharacter = userLogged.favoriteCharacters.filter(fe => fe !== action.payload.character)\n      return setLocalStorage({\n        ...state,\n        userLogged: {\n          ...userLogged,\n          favoriteCharacters: newNoFavCharacter\n        },\n        users: users.map(user => {\n          let userMod = user\n          if (user.id === userLogged.id) {\n            userMod = {\n              ...userMod,\n              favoriteCharacters: newNoFavCharacter\n            }\n          }\n          return userMod\n        })\n      })\n    default:\n      return state\n  }\n}\n\nconst initialState = getLocalStorage()\n\nconst UserContext = React.createContext(initialState)\n\nfunction UserProvider (props) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nexport { UserContext, UserProvider }\n","import React, { useContext } from 'react'\nimport {\n  UserContext,\n  addFavoriteEpisode as AddFavoriteEpisodeDispatch,\n  removeFavoriteEpisode as RemoveFavoriteEpisodeDispatch\n} from '../../../../contexts/User'\n\nexport default function EpisodesTableRow (props) {\n  const { state, dispatch } = useContext(UserContext)\n  const { name, air_date: airDate, episode } = props.episode\n\n  const isFavorite = state.userLogged.favoriteEpisodes.includes(episode)\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{airDate}</td>\n      <td>{episode}</td>\n      <td>\n        {!isFavorite && (\n          <div title='Mark as Favorite' onClick={() => dispatch(AddFavoriteEpisodeDispatch(episode))}>\n            <span role='img' aria-label='Mark as Favorite' className='h2'>&#128150;</span>\n          </div>\n        )}\n        {isFavorite && (\n          <div title='Remove from Favorite' onClick={() => dispatch(RemoveFavoriteEpisodeDispatch(episode))}>\n            <span role='img' aria-label='Mark as Favorite' className='h2'>&#128148;</span>\n          </div>\n        )}\n      </td>\n    </tr>\n  )\n}\n","import React from 'react'\nimport { Modal, Spinner, Container, Row, Col } from 'react-bootstrap'\n\nexport default function Loading ({ isLoading }) {\n  return (\n    <Modal show={isLoading} size='sm' aria-labelledby='contained-modal-title-vcenter' centered>\n      <Modal.Body>\n        <Container>\n          <Row className='show-grid'>\n            <Col />\n            <Col>\n              <Spinner animation='border' variant='dark' sizing='xl' />\n            </Col>\n            <Col />\n          </Row>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport EpisodesTableRow from './Row'\nimport Loading from '../../Loading'\nimport { Table, Pagination, Row, Col } from 'react-bootstrap'\n\nconst URL = 'https://rickandmortyapi.com/api/episode'\nconst defaultTableData = {\n  episodes: [],\n  prev: '',\n  next: '',\n  currentPage: 0\n}\n\nexport default function EpisodesTable (props) {\n  const [tableData, setTableData] = useState(defaultTableData)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const loadEpisodes = (url, sumPage = 1) => {\n    const getApi = async (url, sumPage) => {\n      setIsLoading(true)\n      const response = await axios.get(url)\n      const { info, results } = response.data\n      setTableData({\n        ...tableData,\n        episodes: results,\n        prev: info.prev,\n        next: info.next,\n        currentPage: tableData.currentPage + sumPage\n      })\n      setIsLoading(false)\n    }\n\n    getApi(url, sumPage)\n  }\n\n  useEffect(() => loadEpisodes(URL), [])\n\n  const { episodes, prev, next, currentPage } = tableData\n\n  return (\n    <div>\n      <Loading isLoading={isLoading} />\n      <h3 className='mt-3'>Episodes</h3>\n      <Row>\n        <Col>\n          <Table striped bordered responsive size='sm'>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Air date</th>\n                <th>Episode</th>\n                <th>Favorite</th>\n              </tr>\n            </thead>\n            <tbody>\n              {episodes.map(episode => {\n                return <EpisodesTableRow\n                  key={episode.id}\n                  episode={episode}\n                />\n              })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Pagination className='justify-content-center'>\n            { prev !== '' && <Pagination.Prev onClick={() => loadEpisodes(prev, -1)} />}\n            <Pagination.Item active>{currentPage}</Pagination.Item>\n            {next !== '' && <Pagination.Next onClick={() => loadEpisodes(next)} />}\n          </Pagination>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport {\n  UserContext,\n  addFavoriteCharacter as AddFavoriteCharacterDispatch,\n  removeFavoriteCharacter as RemoveFavoriteCharacterDispatch\n} from '../../../../contexts/User'\n\nexport default function CharactersTableRow (props) {\n  const { state, dispatch } = useContext(UserContext)\n  const { name, status, species, type, gender, image } = props.character\n\n  const isFavorite = state.userLogged.favoriteCharacters.includes(name)\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{status}</td>\n      <td>{species}</td>\n      <td>{type}</td>\n      <td>{gender}</td>\n      <td>\n        <div onClick={() => props.showImage(image)} title='Show image'>\n          <span role='img' aria-label='Show image' className='h2'>&#127924;</span>\n        </div>\n      </td>\n      <td>\n        {!isFavorite && (\n          <div title='Mark as Favorite' onClick={() => dispatch(AddFavoriteCharacterDispatch(name))}>\n            <span role='img' aria-label='Mark as Favorite' className='h2'>&#128150;</span>\n          </div>\n        )}\n        {isFavorite && (\n          <div title='Remove from Favorite' onClick={() => dispatch(RemoveFavoriteCharacterDispatch(name))}>\n            <span role='img' aria-label='Mark as Favorite' className='h2'>&#128148;</span>\n          </div>\n        )}\n      </td>\n    </tr>\n  )\n}\n","import React from 'react'\nimport { Modal, Container, Row, Col, Button, Image } from 'react-bootstrap'\n\nexport default function Loading (props) {\n  const { show, url } = props.imageModal\n  return (\n    <Modal show={show} size='sm' aria-labelledby='contained-modal-title-vcenter' centered>\n      <Modal.Body>\n        <Container>\n          <Row className='show-grid'>\n            <Col>\n              <Image src={url} fluid />\n            </Col>\n          </Row>\n        </Container>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant='outline-secondary' onClick={props.hideImage}>\n          Close\n        </Button>\n\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport CharactersTableRow from './Row'\nimport Loading from '../../Loading'\nimport Image from '../Image'\nimport { Table, Pagination, Row, Col } from 'react-bootstrap'\n\nconst URL = 'https://rickandmortyapi.com/api/character'\nconst defaultTableData = {\n  characters: [],\n  prev: '',\n  next: '',\n  currentPage: 0\n}\nconst defaultImageModal = {\n  show: false,\n  url: ''\n}\n\nexport default function CharactersTable (props) {\n  const [tableData, setTableData] = useState(defaultTableData)\n  const [isLoading, setIsLoading] = useState(false)\n  const [imageModal, setImageModal] = useState(defaultImageModal)\n\n  const loadCharacters = (url, sumPage = 1) => {\n    const getApi = async (url, sumPage) => {\n      setIsLoading(true)\n      const response = await axios.get(url)\n      const { info, results } = response.data\n      setTableData({\n        ...tableData,\n        characters: results,\n        prev: info.prev,\n        next: info.next,\n        currentPage: tableData.currentPage + sumPage\n      })\n      setIsLoading(false)\n    }\n\n    getApi(url, sumPage)\n  }\n\n  const showImage = (url) => {\n    setImageModal({\n      show: true,\n      url\n    })\n  }\n\n  const hideImage = () => {\n    setImageModal(defaultImageModal)\n  }\n\n  useEffect(() => loadCharacters(URL, 1), [])\n\n  const { characters, prev, next, currentPage } = tableData\n\n  return (\n    <div>\n      <Loading isLoading={isLoading} />\n      <Image\n        imageModal={imageModal}\n        hideImage={hideImage}\n      />\n      <h3 className='mt-3'>Characters</h3>\n      <Row>\n        <Col>\n          <Table striped bordered responsive size='sm'>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Status</th>\n                <th>Species</th>\n                <th>Type</th>\n                <th>Gender</th>\n                <th>Image</th>\n                <th>Favorite</th>\n              </tr>\n            </thead>\n            <tbody>\n              {characters.map(character => {\n                return <CharactersTableRow\n                  key={character.id}\n                  character={character}\n                  showImage={showImage}\n                />\n              })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Pagination className='justify-content-center'>\n            { prev !== '' && <Pagination.Prev onClick={() => loadCharacters(prev, -1)} />}\n            <Pagination.Item active>{currentPage}</Pagination.Item>\n            {next !== '' && <Pagination.Next onClick={() => loadCharacters(next)} />}\n          </Pagination>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { UserContext } from '../../../contexts/User'\nimport { Row, Col, Table } from 'react-bootstrap'\n\nexport default function MacthPeople () {\n  const { state } = useContext(UserContext)\n  const { userLogged, users } = state\n  const { favoriteEpisodes, favoriteCharacters } = userLogged\n\n  const matchedPeople = users.filter(u => {\n    if (u.id !== userLogged.id) {\n      const coincidencesEpisodes = favoriteEpisodes.filter(ep => u.favoriteEpisodes.includes(ep))\n      const coincidencesCharacters = favoriteCharacters.filter(ch => u.favoriteCharacters.includes(ch))\n      const matchScore = coincidencesEpisodes.length + coincidencesCharacters.length\n      if (matchScore > 0) {\n        return true\n      }\n    }\n    return false\n  }).map(u => {\n    const coincidencesEpisodes = favoriteEpisodes.filter(ep => u.favoriteEpisodes.includes(ep))\n    const coincidencesCharacters = favoriteCharacters.filter(ch => u.favoriteCharacters.includes(ch))\n    const matchScore = coincidencesEpisodes.length + coincidencesCharacters.length\n    return {\n      id: u.id,\n      email: u.email,\n      coincidencesEpisodes,\n      coincidencesCharacters,\n      matchScore\n    }\n  }).sort((a, b) => {\n    if (a.matchScore < b.matchScore) {\n      return 1\n    }\n    if (a.matchScore > b.matchScore) {\n      return -1\n    }\n    return 0\n  })\n\n  return (\n    <div>\n      <h3 className='mt-3'>Match People</h3>\n      <Row>\n        <Col>\n          <Table striped bordered responsive size='sm'>\n            <thead>\n              <tr>\n                <th>User</th>\n                <th>Coincidences Episodes</th>\n                <th>Coincidences Characters</th>\n                <th>Match Score</th>\n              </tr>\n            </thead>\n            <tbody>\n              {matchedPeople.map(u => (\n                <tr key={u.id}>\n                  <td>{u.email}</td>\n                  <td>{u.coincidencesEpisodes.join(', ')}</td>\n                  <td>{u.coincidencesCharacters.join(', ')}</td>\n                  <td>{u.matchScore}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { Jumbotron, Form, Button, Alert } from 'react-bootstrap'\nimport {\n  UserContext,\n  updateUser as UpdateUserDispatch\n} from '../../../contexts/User'\n\nconst defaultTempUser = {\n  currentPassword: '',\n  password: '',\n  passwordConfirm: ''\n}\n\nexport default function MyAccount () {\n  const { state, dispatch } = useContext(UserContext)\n  const { userLogged } = state\n  const [ tempUser, setTempUser ] = useState(defaultTempUser)\n  const [ errors, setErrors ] = useState({})\n  const [ save, setSave ] = useState(null)\n\n  const updateTempUser = e => {\n    setTempUser({\n      ...tempUser,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const submitUpdate = e => {\n    e.preventDefault()\n    let newErrors = {}\n    let valid = true\n    if (tempUser.currentPassword === '') {\n      newErrors = {\n        ...newErrors,\n        currentPassword: 'Should not be blank'\n      }\n      valid = false\n    } else if (userLogged.password !== tempUser.currentPassword) {\n      newErrors = {\n        ...newErrors,\n        currentPassword: 'Wrong current password'\n      }\n      valid = false\n    } else {\n      newErrors = {\n        ...newErrors,\n        currentPassword: null\n      }\n    }\n    if (tempUser.password === '') {\n      newErrors = {\n        ...newErrors,\n        password: 'Should not be blank'\n      }\n      valid = false\n    } else {\n      newErrors = {\n        ...newErrors,\n        password: null\n      }\n    }\n    if (tempUser.passwordConfirm === '') {\n      newErrors = {\n        ...newErrors,\n        passwordConfirm: 'Should not be blank'\n      }\n      valid = false\n    } else if (tempUser.passwordConfirm !== tempUser.password) {\n      newErrors = {\n        ...newErrors,\n        passwordConfirm: 'Should be the same password'\n      }\n      valid = false\n    } else {\n      newErrors = {\n        ...newErrors,\n        passwordConfirm: null\n      }\n    }\n    if (valid) {\n      dispatch(UpdateUserDispatch(tempUser))\n      setTempUser(defaultTempUser)\n      setErrors({})\n      setSave('success')\n    } else {\n      setErrors(newErrors)\n    }\n  }\n\n  return (\n    <Jumbotron>\n      {save && (<Alert variant={save}>Correctly saved</Alert>)}\n      <Form onSubmit={submitUpdate}>\n        <Form.Group controlId='currentPassword'>\n          <Form.Label>Current Password</Form.Label>\n          <Form.Control type='password' name='currentPassword' placeholder='Current Password' onChange={updateTempUser} value={tempUser.currentPassword} />\n          {errors.currentPassword && (\n            <Form.Text className='text-muted'>\n              <p className='text-danger'>{errors.currentPassword}</p>\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type='password' name='password' placeholder='Password' onChange={updateTempUser} value={tempUser.password} />\n          {errors.password && (\n            <Form.Text className='text-muted'>\n              <p className='text-danger'>{errors.password}</p>\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId='passwordConfirm'>\n          <Form.Label>Password Confirm</Form.Label>\n          <Form.Control type='password' name='passwordConfirm' placeholder='Password Confirm' onChange={updateTempUser} value={tempUser.passwordConfirm} />\n          {errors.passwordConfirm && (\n            <Form.Text className='text-muted'>\n              <p className='text-danger'>{errors.passwordConfirm}</p>\n            </Form.Text>\n          )}\n        </Form.Group>\n        <Button variant='primary' type='submit'>\n          Submit\n        </Button>\n      </Form>\n    </Jumbotron>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { Jumbotron, Form, Button, Alert } from 'react-bootstrap'\nimport {\n  UserContext,\n  login as LoginDispatch\n} from '../../../contexts/User'\n\nexport default function UserLogin () {\n  const { state, dispatch } = useContext(UserContext)\n  const { users } = state\n  const [ tempUser, setTempUser ] = useState({ email: '', password: '' })\n  const [ errors, setErrors ] = useState({ global: null, email: null, password: null })\n\n  const updateTempUser = e => {\n    setTempUser({\n      ...tempUser,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const submitLogin = e => {\n    e.preventDefault()\n    let newErrors = {}\n    let valid = true\n    let user = null\n    if (tempUser.email === '') {\n      newErrors = {\n        ...newErrors,\n        email: 'Should not be blank'\n      }\n      valid = false\n    } else {\n      newErrors = {\n        ...newErrors,\n        email: null\n      }\n    }\n    if (tempUser.password === '') {\n      newErrors = {\n        ...newErrors,\n        password: 'Should not be blank'\n      }\n      valid = false\n    } else {\n      newErrors = {\n        ...newErrors,\n        password: null\n      }\n    }\n    if (valid) {\n      if (users === undefined) {\n        newErrors = {\n          ...newErrors,\n          global: 'Wrong email and/or password'\n        }\n        valid = false\n      } else {\n        user = users.filter(u => u.email === tempUser.email)[0]\n        if (user === undefined || user.password !== tempUser.password) {\n          newErrors = {\n            ...newErrors,\n            global: 'Wrong email and/or password'\n          }\n          valid = false\n        } else {\n          newErrors = {\n            ...newErrors,\n            global: null\n          }\n        }\n      }\n    }\n    if (valid) {\n      dispatch(LoginDispatch(user))\n    } else {\n      setErrors(newErrors)\n    }\n  }\n\n  return (\n    <Jumbotron>\n      {errors.global && (<Alert variant='warning'>{errors.global}</Alert>)}\n      <Form onSubmit={submitLogin}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type='email' name='email' placeholder='Enter email' onChange={updateTempUser} value={tempUser.email} />\n          {errors.email && (\n            <Form.Text className='text-muted text-danger'>\n              <p className='text-danger'>{errors.email}</p>\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type='password' name='password' placeholder='Password' onChange={updateTempUser} value={tempUser.password} />\n          {errors.password && (\n            <Form.Text className='text-muted'>\n              <p className='text-danger'>{errors.password}</p>\n            </Form.Text>\n          )}\n        </Form.Group>\n        <Button variant='primary' type='submit'>\n          Submit\n        </Button>\n      </Form>\n    </Jumbotron>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { Jumbotron, Form, Button } from 'react-bootstrap'\nimport {\n  UserContext,\n  register as RegisterDispatch\n} from '../../../contexts/User'\n\nconst defaultTempUser = {\n  email: '',\n  password: '',\n  passwordConfirm: ''\n}\n\nexport default function UserLogin () {\n  const { state, dispatch } = useContext(UserContext)\n  const { users } = state\n  const [ tempUser, setTempUser ] = useState(defaultTempUser)\n  const [ errors, setErrors ] = useState({})\n\n  const updateTempUser = e => {\n    setTempUser({\n      ...tempUser,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const submitRegister = e => {\n    e.preventDefault()\n    let newErrors = {}\n    let valid = true\n    if (tempUser.email === '') {\n      newErrors = {\n        ...newErrors,\n        email: 'Should not be blank'\n      }\n      valid = false\n    } else if (users !== undefined && users.filter(u => u.email === tempUser.email).length > 0) {\n      newErrors = {\n        ...newErrors,\n        email: 'Already exist'\n      }\n      valid = false\n    } else {\n      newErrors = {\n        ...newErrors,\n        email: null\n      }\n    }\n    if (tempUser.password === '') {\n      newErrors = {\n        ...newErrors,\n        password: 'Should not be blank'\n      }\n      valid = false\n    } else {\n      newErrors = {\n        ...newErrors,\n        password: null\n      }\n    }\n    if (tempUser.passwordConfirm === '') {\n      newErrors = {\n        ...newErrors,\n        passwordConfirm: 'Should not be blank'\n      }\n      valid = false\n    } else if (tempUser.passwordConfirm !== tempUser.password) {\n      newErrors = {\n        ...newErrors,\n        passwordConfirm: 'Should be the same password'\n      }\n      valid = false\n    } else {\n      newErrors = {\n        ...newErrors,\n        passwordConfirm: null\n      }\n    }\n    if (valid) {\n      dispatch(RegisterDispatch(tempUser))\n    } else {\n      setErrors(newErrors)\n    }\n  }\n\n  return (\n    <Jumbotron>\n      <Form onSubmit={submitRegister}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type='email' name='email' placeholder='Enter email' onChange={updateTempUser} value={tempUser.email} />\n          {errors.email && (\n            <Form.Text className='text-muted'>\n              <p className='text-danger'>{errors.email}</p>\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type='password' name='password' placeholder='Password' onChange={updateTempUser} value={tempUser.password} />\n          {errors.password && (\n            <Form.Text className='text-muted'>\n              <p className='text-danger'>{errors.password}</p>\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId='passwordConfirm'>\n          <Form.Label>Password Confirm</Form.Label>\n          <Form.Control type='password' name='passwordConfirm' placeholder='Password Confirm' onChange={updateTempUser} value={tempUser.passwordConfirm} />\n          {errors.passwordConfirm && (\n            <Form.Text className='text-muted'>\n              <p className='text-danger'>{errors.passwordConfirm}</p>\n            </Form.Text>\n          )}\n        </Form.Group>\n        <Button variant='primary' type='submit'>\n          Submit\n        </Button>\n      </Form>\n    </Jumbotron>\n  )\n}\n","import React, { useContext } from 'react'\nimport { UserContext } from '../../../contexts/User'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport default function PrivateRoute ({ component: Component, ...rest }) {\n  const { state } = useContext(UserContext)\n  const { userLogged } = state\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (userLogged !== undefined && userLogged !== null) {\n          return <Component {...props} />\n        } else {\n          return <Redirect to='/login' />\n        }\n      }}\n    />\n  )\n}\n","import React, { useContext } from 'react'\nimport { UserContext } from '../../../contexts/User'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport default function PublicRoute ({ component: Component, ...rest }) {\n  const { state } = useContext(UserContext)\n  const { userLogged } = state\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (userLogged !== undefined && userLogged !== null) {\n          return <Redirect to='/' />\n        } else {\n          return <Component {...props} />\n        }\n      }}\n    />\n  )\n}\n","import React, { useContext } from 'react'\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom'\nimport EpisodesTable from '../Episodes/Table'\nimport CharactersTable from '../Characters/Table'\nimport MatchPeople from '../Users/MatchPeople'\nimport MyAccount from '../Users/MyAccount'\nimport UserLogin from '../Users/Login'\nimport UserRegister from '../Users/Register'\nimport PrivateRoute from './PrivateRoute'\nimport PublicRoute from './PublicRoute'\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport {\n  UserContext,\n  logout as LogoutDispatch\n} from '../../contexts/User'\n\nconst Homepage = () => {\n  return (\n    <h5>Home</h5>\n  )\n}\n\nfunction Template (props) {\n  const { state, dispatch } = useContext(UserContext)\n  const { userLogged } = state\n\n  const SignOut = () => {\n    dispatch(LogoutDispatch())\n    return ''\n  }\n\n  return (\n    <Router>\n      <Navbar collapseOnSelect expand='lg' bg='dark' variant='dark'>\n        <Navbar.Brand href='#home'>R & M</Navbar.Brand>\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n        <Navbar.Collapse id='responsive-navbar-nav'>\n          {(userLogged !== undefined && userLogged !== null) && (\n            <Nav className='mr-auto'>\n              <NavLink exact to='/' className='nav-link'>Home</NavLink>\n              <NavLink exact to='/episodes' className='nav-link'>Episodes</NavLink>\n              <NavLink exact to='/characters' className='nav-link'>Characters</NavLink>\n              <NavLink exact to='/match_people' className='nav-link'>Match People</NavLink>\n            </Nav>\n          )}\n          {(userLogged === undefined || userLogged === null) && (\n            <Nav className='mr-auto'>\n              <NavLink exact to='/' className='nav-link'>Home</NavLink>\n            </Nav>\n          )}\n          <Nav>\n            {(userLogged !== undefined && userLogged !== null) && (\n              <NavDropdown alignRight title={userLogged.email} id='user-dropdown'>\n                <NavLink exact to='/my_account' className='dropdown-item'>My Account</NavLink>\n                <NavDropdown.Divider />\n                <NavLink exact to='/sign_out' className='dropdown-item'>Sign Out</NavLink>\n              </NavDropdown>\n            )}\n            {(userLogged === undefined || userLogged === null) && (\n              <NavDropdown alignRight title='User' id='user-dropdown'>\n                <NavLink exact to='/login' className='dropdown-item'>Login</NavLink>\n                <NavLink exact to='/register' className='dropdown-item'>Register</NavLink>\n              </NavDropdown>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Container>\n        <Switch>\n          <Route exact path='/' component={Homepage} />\n          <PrivateRoute exact path='/episodes' component={EpisodesTable} />\n          <PrivateRoute exact path='/characters' component={CharactersTable} />\n          <PrivateRoute exact path='/match_people' component={MatchPeople} />\n          <PrivateRoute exact path='/my_account' component={MyAccount} />\n          <PrivateRoute exact path='/sign_out' component={SignOut} />\n          <PublicRoute exact path='/login' component={UserLogin} />\n          <PublicRoute exact path='/register' component={UserRegister} />\n        </Switch>\n      </Container>\n    </Router>\n  )\n}\n\nexport default Template\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { UserProvider } from './contexts/User'\nimport Template from './components/Template'\n\nconst Root = () => (\n  <UserProvider>\n    <Template />\n  </UserProvider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}